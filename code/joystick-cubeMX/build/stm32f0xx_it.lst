ARM GAS  /var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/stm32f0xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB43:
   1:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_it.c **** /**
   3:Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Src/stm32f0xx_it.c ****   * @attention
   8:Src/stm32f0xx_it.c ****   *
   9:Src/stm32f0xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/stm32f0xx_it.c ****   * All rights reserved.
  11:Src/stm32f0xx_it.c ****   *
  12:Src/stm32f0xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32f0xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32f0xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32f0xx_it.c ****   *
  16:Src/stm32f0xx_it.c ****   ******************************************************************************
  17:Src/stm32f0xx_it.c ****   */
  18:Src/stm32f0xx_it.c **** /* USER CODE END Header */
  19:Src/stm32f0xx_it.c **** 
  20:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32f0xx_it.c **** #include "main.h"
  22:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  23:Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32f0xx_it.c **** 
  27:Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32f0xx_it.c **** 
  30:Src/stm32f0xx_it.c **** /* USER CODE END TD */
  31:Src/stm32f0xx_it.c **** 
  32:Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s 			page 2


  33:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32f0xx_it.c **** 
  35:Src/stm32f0xx_it.c **** /* USER CODE END PD */
  36:Src/stm32f0xx_it.c **** 
  37:Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32f0xx_it.c **** 
  40:Src/stm32f0xx_it.c **** /* USER CODE END PM */
  41:Src/stm32f0xx_it.c **** 
  42:Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32f0xx_it.c **** 
  45:Src/stm32f0xx_it.c **** /* USER CODE END PV */
  46:Src/stm32f0xx_it.c **** 
  47:Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32f0xx_it.c **** 
  50:Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32f0xx_it.c **** 
  52:Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32f0xx_it.c **** 
  55:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32f0xx_it.c **** 
  57:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32f0xx_it.c **** 
  59:Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  60:Src/stm32f0xx_it.c **** 
  61:Src/stm32f0xx_it.c **** /* USER CODE END EV */
  62:Src/stm32f0xx_it.c **** 
  63:Src/stm32f0xx_it.c **** /******************************************************************************/
  64:Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */
  65:Src/stm32f0xx_it.c **** /******************************************************************************/
  66:Src/stm32f0xx_it.c **** /**
  67:Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  68:Src/stm32f0xx_it.c ****   */
  69:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  70:Src/stm32f0xx_it.c **** {
  27              		.loc 1 70 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  71:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  72:Src/stm32f0xx_it.c **** 
  73:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  74:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  75:Src/stm32f0xx_it.c ****    while (1)
  34              		.loc 1 75 4 view .LVU1
  76:Src/stm32f0xx_it.c ****   {
  77:Src/stm32f0xx_it.c ****   }
  35              		.loc 1 77 3 view .LVU2
  75:Src/stm32f0xx_it.c ****   {
  36              		.loc 1 75 10 view .LVU3
  37 0000 FEE7     		b	.L2
ARM GAS  /var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s 			page 3


  38              		.cfi_endproc
  39              	.LFE43:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB44:
  78:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  79:Src/stm32f0xx_it.c **** }
  80:Src/stm32f0xx_it.c **** 
  81:Src/stm32f0xx_it.c **** /**
  82:Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  83:Src/stm32f0xx_it.c ****   */
  84:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  85:Src/stm32f0xx_it.c **** {
  50              		.loc 1 85 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  86:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  87:Src/stm32f0xx_it.c **** 
  88:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  89:Src/stm32f0xx_it.c ****   while (1)
  57              		.loc 1 89 3 view .LVU5
  90:Src/stm32f0xx_it.c ****   {
  91:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  92:Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  93:Src/stm32f0xx_it.c ****   }
  58              		.loc 1 93 3 view .LVU6
  89:Src/stm32f0xx_it.c ****   {
  59              		.loc 1 89 9 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE44:
  64              		.section	.text.SVC_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	SVC_Handler
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  71              	SVC_Handler:
  72              	.LFB45:
  94:Src/stm32f0xx_it.c **** }
  95:Src/stm32f0xx_it.c **** 
  96:Src/stm32f0xx_it.c **** /**
  97:Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
  98:Src/stm32f0xx_it.c ****   */
  99:Src/stm32f0xx_it.c **** void SVC_Handler(void)
 100:Src/stm32f0xx_it.c **** {
  73              		.loc 1 100 1 view -0
  74              		.cfi_startproc
ARM GAS  /var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s 			page 4


  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 101:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 102:Src/stm32f0xx_it.c **** 
 103:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 104:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 105:Src/stm32f0xx_it.c **** 
 106:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 107:Src/stm32f0xx_it.c **** }
  78              		.loc 1 107 1 view .LVU9
  79              		@ sp needed
  80 0000 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE45:
  84              		.section	.text.PendSV_Handler,"ax",%progbits
  85              		.align	1
  86              		.global	PendSV_Handler
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  91              	PendSV_Handler:
  92              	.LFB46:
 108:Src/stm32f0xx_it.c **** 
 109:Src/stm32f0xx_it.c **** /**
 110:Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 111:Src/stm32f0xx_it.c ****   */
 112:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 113:Src/stm32f0xx_it.c **** {
  93              		.loc 1 113 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 114:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 115:Src/stm32f0xx_it.c **** 
 116:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 117:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 118:Src/stm32f0xx_it.c **** 
 119:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 120:Src/stm32f0xx_it.c **** }
  98              		.loc 1 120 1 view .LVU11
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE46:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 111              	SysTick_Handler:
 112              	.LFB47:
 121:Src/stm32f0xx_it.c **** 
 122:Src/stm32f0xx_it.c **** /**
 123:Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
ARM GAS  /var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s 			page 5


 124:Src/stm32f0xx_it.c ****   */
 125:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 126:Src/stm32f0xx_it.c **** {
 113              		.loc 1 126 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117 0000 10B5     		push	{r4, lr}
 118              	.LCFI0:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 4, -8
 121              		.cfi_offset 14, -4
 127:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 128:Src/stm32f0xx_it.c **** 
 129:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 130:Src/stm32f0xx_it.c ****   HAL_IncTick();
 122              		.loc 1 130 3 view .LVU13
 123 0002 FFF7FEFF 		bl	HAL_IncTick
 124              	.LVL0:
 131:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 132:Src/stm32f0xx_it.c **** 
 133:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 134:Src/stm32f0xx_it.c **** }
 125              		.loc 1 134 1 is_stmt 0 view .LVU14
 126              		@ sp needed
 127 0006 10BD     		pop	{r4, pc}
 128              		.cfi_endproc
 129              	.LFE47:
 131              		.text
 132              	.Letext0:
 133              		.file 2 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
/var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s:19     .text.NMI_Handler:00000000 $t
/var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s:25     .text.NMI_Handler:00000000 NMI_Handler
/var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s:42     .text.HardFault_Handler:00000000 $t
/var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
/var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s:65     .text.SVC_Handler:00000000 $t
/var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s:71     .text.SVC_Handler:00000000 SVC_Handler
/var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s:85     .text.PendSV_Handler:00000000 $t
/var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s:91     .text.PendSV_Handler:00000000 PendSV_Handler
/var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s:105    .text.SysTick_Handler:00000000 $t
/var/folders/4h/7vm9s8w13t95ghm4btcrtdl80000gn/T//ccCO5eHJ.s:111    .text.SysTick_Handler:00000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
